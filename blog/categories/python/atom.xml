<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: python | Bitdewy]]></title>
  <link href="http://bitdewy.github.com/blog/categories/python/atom.xml" rel="self"/>
  <link href="http://bitdewy.github.com/"/>
  <updated>2014-01-21T01:28:20+08:00</updated>
  <id>http://bitdewy.github.com/</id>
  <author>
    <name><![CDATA[bitdewy]]></name>
    <email><![CDATA[bitdewy@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[4年前的用 Django 实现的玩具 blog]]></title>
    <link href="http://bitdewy.github.com/blog/2012/06/26/django-toy-blog/"/>
    <updated>2012-06-26T19:28:00+08:00</updated>
    <id>http://bitdewy.github.com/blog/2012/06/26/django-toy-blog</id>
    <content type="html"><![CDATA[<p>最近整理硬盘，发现角落里4年前写的玩具 blog，虽然现在还偶尔写写 <a href="http://python.org/">python</a> 处理简单的事情，不过由于工作与 web 没半毛钱关系，很久都没有关注，<a href="https://www.djangoproject.com/">Django</a> 什么的早就忘得差不多了。</p>

<p>08年9月时候 <a href="https://www.djangoproject.com/">Django</a> 刚刚发布 1.0，那时候在学校时间充裕，加上关注 <a href="https://www.djangoproject.com/">Django</a> 也有一段时间了，<a href="https://www.djangoproject.com/">Django</a> 从 0.96 停滞这么长时间才发布 1.0，而且变化不小，于是下决心用 <a href="https://www.djangoproject.com/">Django</a> 完成个小玩意儿，自己也没什么主意，不知道做什么，想来想去还是做个 blog 比较简单，到时候自己也可以用，即练手又能用自己，还能激励自己不断更新，于是花了2周多时间用 <a href="https://www.djangoproject.com/">Django</a> 1.0 实现了这个玩具 blog。（当时的想法挺好，不过由于一些原因，形成雏形之后就没再更新过，所以用过一段时间就没再用了…，然后，就没有然后了…）</p>

<!-- more -->


<p>功能实现的比较简单，不过最基本的东西都有了，文章分类，评论，按时间归档，标签，RSS，i18n(不过只有英语和汉语)，链接等等。整个过程还算顺利，有 <a href="https://www.djangoproject.com/">Django</a> 的 <a href="http://en.wikipedia.org/wiki/Object-relational_mapping">ORM</a>  数据库的构建简单了许多，那时候 <a href="http://python.org/">python</a> 用了有一段时间（虽然现在看起来代码很垃圾，相当的不 pythonic ），view 写起来也很顺手，但 template 就比较痛苦了，由于没有美术基础，前端也仅限于能看懂改改而已，主题 <a href="http://livesino.net/theme-codename-h#mobile">Theme Codename H</a> 是从 <a href="http://livesino.net/">livesino</a> 一个个的静态页面上扒下来的，fav 图标是借用的 <a href="http://desktop.google.com/">google desktop</a> 图标（很遗憾 <a href="http://desktop.google.com/">google desktop</a> 已于 2011年9月宣布不再提供下载，也不再为已安装的用户提供更新），logo 是直接用的<a href="http://www.foundertype.com/showsortpic.php?inputword=%B0%AE%D3%DA%D7%D6%C0%EF%D0%D0%BC%E4&amp;sid=1041&amp;fontfile=FZMWFONT.TTF">方正喵呜体</a>（现在看着还是很萌 :) ），原本想选用 <a href="http://www.tinymce.com/">TinyMCE</a> 做富文本编辑器（ <a href="http://wordpress.org/">wordpress</a> 一直使用的 <a href="http://www.tinymce.com/">TinyMCE</a>，功能很强大），但使用中遇到一些问题（现在已经想不起来是什么问题了… :( ）， 于是选择了同样老牌的 <a href="http://ckeditor.com/">FCKeditor</a> （话说 <a href="http://ckeditor.com/">FCKeditor</a> 的漏洞不少 –_&ndash;||，另外 <a href="http://ckeditor.com/">FCKeditor</a> 从09年升级到3.0的时候改名为 <a href="http://ckeditor.com/">CKEditor</a> 了），当时就想要功能强大，现在觉得无论是 <a href="http://www.tinymce.com/">TinyMCE</a> 还是 <a href="http://ckeditor.com/">FCKeditor</a> 都太重量级了。</p>

<p>最近闲来无事，把这个玩具迁移到 <a href="https://www.djangoproject.com/">Django</a> 1.4了，从 1.0 到 1.4 变化不少，[The syndication feed framework][40] 在 1.2 版本的时候重构了，1.2 之前的接口在 1.4 版本中移除了，不过原本 feed 的功能就使用的不多，移植起来比较容易，另外 1.4 默认开启了中间件 [CSRF][]，使用起来也很容易，还有一些其他的小改动就不一一列举了，最大的改动应该是 1.3 引入的 [staticfiles app][41]，这使得部署静态资源变得更容易了，在引入 staticfiles 之后，只要执行 manage.py collectstatic 就可以方便的将app中所用到的静态资源拷贝到同一目录了。</p>

<p>用了几天的空闲时间把这个简陋的 blog 的迁移任务初步完成了，目前自己没有主机，也没有时间打理，关于如何部署到服务器可以参考 <a href="https://docs.djangoproject.com/en/1.4/howto/deployment/">Deploying Django</a>，数据库可以参考 <a href="https://docs.djangoproject.com/en/1.4/ref/databases/">Databases</a>，如果还有空闲的话希望能够完善，虽然已经4年没有做过web项目了，但希望如果有机会，以后还能参与。不说废话了，上两张图吧。</p>

<p><img src="https://raw.github.com/bitdewy/MONShellog/master/snapshot00.png" alt="" />
<img src="https://raw.github.com/bitdewy/MONShellog/master/snapshot01.png" alt="" /></p>

<p>最后，项目地址：<a href="https://github.com/bitdewy/MONShellog">MONShellog</a></p>
]]></content>
  </entry>
  
</feed>
